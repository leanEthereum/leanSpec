name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint and format checks - Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13", "3.14"]
    steps:
      - name: Checkout leanSpec
        uses: actions/checkout@v4
      
      - name: Install uv and Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          python-version: ${{ matrix.python-version }}
      
      - name: Run all quality checks via tox
        run: uvx tox -e all-checks

  test:
    name: Tests - Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.12", "3.13", "3.14"]
    steps:
      - name: Checkout leanSpec
        uses: actions/checkout@v4
      
      - name: Install uv and Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          python-version: ${{ matrix.python-version }}
      
      - name: Run tests via tox
        run: uvx tox -e pytest

  fill-tests:
    name: Fill test fixtures - Python 3.14
    runs-on: ubuntu-latest
    steps:
      - name: Checkout leanSpec
        uses: actions/checkout@v4

      - name: Install uv and Python 3.14
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          python-version: "3.14"

      - name: Sync dependencies
        run: uv sync --all-packages --no-progress

      - name: Fill test fixtures
        run: uv run fill --fork=Devnet --clean
