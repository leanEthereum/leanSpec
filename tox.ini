[tox]
min_version = 4.0
requires =
    tox >=4.32.0,<5
    tox-uv >=1.29
env_list =
    # defines what runs when `uvx tox` is executed with no `-e` argument
    all-checks
    pytest
    docs-build

[testenv]
uv_python = >=3.12
package = editable
runner = uv-venv-lock-runner

[testenv:all-checks]
description = Run all quality checks (lint, typecheck, spellcheck, mdformat)
commands =
    {[testenv:lint]commands}
    {[testenv:typecheck]commands}
    {[testenv:spellcheck]commands}
    {[testenv:mdformat]commands}

[testenv:lint]
description = Lint and code formatting checks (ruff)
commands =
    ruff check --no-fix --show-fixes src tests packages
    ruff format --check src tests packages

[testenv:fix]
description = Auto-fix linting and formatting issues (ruff)
commands =
    ruff check --fix src tests packages
    ruff format src tests packages

[testenv:typecheck]
description = Run type checking (mypy)
commands = mypy src tests packages

[testenv:spellcheck]
description = Run spell checking (codespell)
commands = codespell src tests packages docs README.md CLAUDE.md --skip="*.lock,*.svg,.git,__pycache__,.mypy_cache,.pytest_cache" --ignore-words=.codespell-ignore-words.txt

[testenv:mdformat]
description = Check markdown formatting for docs (mdformat)
commands = mdformat docs/

[testenv:pytest]
description = Run tests (pytest)
# parallelize with `auto` but keep max processes reasonable for CI
commands = pytest {posargs} tests -n auto --maxprocesses=10 --durations=10 --dist=worksteal

[testenv:pytest-cov]
description = Run tests with coverage (pytest)
commands = pytest --cov --cov-report=html --cov-report=term {posargs}

[testenv:pytest-consensus]
description = Run consensus tests (pytest)
commands = pytest {posargs} -n auto --maxprocesses=10 --durations=10 --dist=worksteal \
    tests/lean_spec/subspecs/containers \
    tests/lean_spec/subspecs/forkchoice \
    tests/lean_spec/subspecs/networking

[testenv:docs-build]
description = Build documentation (mkdocs)
commands = mkdocs build {posargs}

[testenv:docs-serve]
description = Serve documentation locally (mkdocs)
commands = mkdocs serve {posargs}
